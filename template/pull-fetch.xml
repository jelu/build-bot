<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>30</daysToKeep>
    <numToKeep>100</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.plugins.cloneworkspace.CloneWorkspaceSCM" plugin="clone-workspace-scm@0.6">
    <parentJobName>base-@BASE@</parentJobName>
    <criteria>Successful</criteria>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>true</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>true</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>git reset --hard &amp;&amp;
if ! git remote show | grep -q pr; then
  git remote add pr @PR_GIT@
fi &amp;&amp;
git fetch origin &quot;+refs/heads/@ORIGIN_BRANCH@:refs/remotes/origin/@ORIGIN_BRANCH@&quot; &amp;&amp;
git fetch pr &quot;+refs/heads/@PR_BRANCH@:refs/remotes/pr/@PR_BRANCH@&quot; ||
exit 1

rm .revision
GIT_ORIGIN_COMMIT=`git branch -rv | while read branch commit rest; do
  if [ &quot;$branch&quot; = &quot;origin/@ORIGIN_BRANCH@&quot; ]; then
    echo $commit;
    break;
  fi;
done`
GIT_PR_COMMIT="@LAST_COMMIT_SHA@"
if [ -z &quot;$GIT_ORIGIN_COMMIT&quot; -o -z &quot;$GIT_PR_COMMIT&quot; ]; then
  exit 1
fi
echo &quot;$GIT_ORIGIN_COMMIT-$GIT_PR_COMMIT&quot; &gt; .revision &amp;&amp;

if git branch | grep -q build; then
  if ! git branch | grep -q &apos;* build&apos;; then
    git checkout build
  fi &amp;&amp;
  git reset --hard origin/@ORIGIN_BRANCH@
else
  git branch build origin/@ORIGIN_BRANCH@ &amp;&amp;
  git checkout build
fi &amp;&amp;
git merge $GIT_PR_COMMIT
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.cloneworkspace.CloneWorkspacePublisher plugin="clone-workspace-scm@0.6">
      <workspaceGlob></workspaceGlob>
      <criteria>Successful</criteria>
      <archiveMethod>TAR</archiveMethod>
      <overrideDefaultExcludes>false</overrideDefaultExcludes>
    </hudson.plugins.cloneworkspace.CloneWorkspacePublisher>
@NO_CHILDS_START@
    <hudson.tasks.BuildTrigger>
      <childProjects>@CHILDS@</childProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </hudson.tasks.BuildTrigger>
@NO_CHILDS_END@
  </publishers>
  <buildWrappers/>
</project>